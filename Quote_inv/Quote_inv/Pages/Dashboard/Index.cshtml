@page
@model Quote_inv.Pages.Dashboard.IndexModel
@{
    ViewData["Title"] = "Dashboard";
    Layout = "_Layout";
}

<style>
    /* Custom styles matching your color scheme */
    .btn-primary {
        background-color: #556b2f;
        border-color: #556b2f;
    }

        .btn-primary:hover {
            background-color: #6b8e23;
            border-color: #6b8e23;
        }

    .btn-success {
        background-color: #c1d8ac;
        border-color: #c1d8ac;
        color: #333;
    }

        .btn-success:hover {
            background-color: #a8c293;
            border-color: #a8c293;
        }

    .btn-outline-primary {
        color: #556b2f;
        border-color: #556b2f;
    }

        .btn-outline-primary:hover,
        .btn-outline-primary.active {
            background-color: #556b2f;
            color: white;
        }

    .card-header {
        background-color: #556b2f !important;
        color: white !important;
    }

    h1 {
        color: #556b2f;
    }

    h3 {
        color: white;
    }

    h4 {
        color: #556b2f;
    }


    .btn-danger {
        background-color: #8b0000;
        border-color: #8b0000;
    }

    /* Table styling */
    .table {
        border-color: #c1d8ac;
    }

        .table thead th {
            background-color: #c1d8ac;
            color: #333;
            border-color: #c1d8ac;
        }

        .table tbody tr:nth-child(even) {
            background-color: rgba(193, 216, 172, 0.2);
        }

    /* Remove all blue styling */
    .btn-outline-primary:not(.active):focus,
    .btn-outline-primary:not(.active):active {
        color: #556b2f;
        background-color: transparent;
        border-color: #556b2f;
        box-shadow: none;
    }

    .form-control:focus {
        border-color: #c1d8ac;
        box-shadow: 0 0 0 0.2rem rgba(85, 107, 47, 0.25);
    }
</style>

<div class="container mt-5">
    <h1 class="mb-4">Dashboard</h1>

    <div class="row mb-4">
        <div class="col-md-6">
            <a asp-page="/Dashboard/clients/ClientList" class="btn btn-primary btn-lg btn-block">Manage Clients</a>
        </div>
        <div class="col-md-6">
            <a asp-page="/Dashboard/Quotations/Index" class="btn btn-success btn-lg btn-block">View Quotations</a>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <h3>Create New Quotation</h3>
        </div>
        <div class="card-body">
            <form method="post" id="quotationForm">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="NewQuotation.QuotationId">Quotation ID</label>
                            <input asp-for="NewQuotation.QuotationId" class="form-control" readonly />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="NewQuotation.Client.name">Client Name</label>
                            <input asp-for="NewQuotation.Client.name" class="form-control" id="clientName" readonly />
                        </div>
                        <div class="form-group">
                            <label asp-for="NewQuotation.DateCreated">Date Created</label>
                            <input asp-for="NewQuotation.DateCreated" class="form-control" readonly />
                        </div>
                    </div>
                </div>

                <div class="form-group mt-3">
                    <div class="btn-group btn-group-toggle" data-toggle="buttons">
                        <label class="btn btn-outline-primary active">
                            <input type="radio" name="quotationType" id="serviceType" autocomplete="off" checked> Service
                        </label>
                        <label class="btn btn-outline-primary">
                            <input type="radio" name="quotationType" id="productType" autocomplete="off"> Product
                        </label>
                    </div>
                </div>

                <!-- Service Items Section -->
                <div id="serviceSection">
                    <h4 class="mt-3">Service Items</h4>
                    <table class="table" id="serviceTable">
                        <thead>
                            <tr>
                                <th>No.</th>
                                <th>Service</th>
                                <th>Description</th>
                                <th>Price</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody id="serviceItemsBody">
                            <!-- Items will be added here dynamically -->
                        </tbody>
                        <tfoot>
                            <tr>
                                <td colspan="3" class="text-right"><strong>Total:</strong></td>
                                <td id="serviceTotal">$0.00</td>
                                <td></td>
                            </tr>
                        </tfoot>
                    </table>
                    <button type="button" class="btn btn-success btn-sm" id="addServiceItem">Add Service Item</button>
                </div>

                <!-- Product Items Section -->
                <div id="productSection" style="display: none;">
                    <h4 class="mt-3">Product Items</h4>
                    <table class="table" id="productTable">
                        <thead>
                            <tr>
                                <th>No.</th>
                                <th>Product</th>
                                <th>Description</th>
                                <th>Quantity</th>
                                <th>Price</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody id="productItemsBody">
                            <!-- Items will be added here dynamically -->
                        </tbody>
                        <tfoot>
                            <tr>
                                <td colspan="4" class="text-right"><strong>Total:</strong></td>
                                <td id="productTotal">$0.00</td>
                                <td></td>
                            </tr>
                        </tfoot>
                    </table>
                    <button type="button" class="btn btn-success btn-sm" id="addProductItem">Add Product Item</button>
                </div>

                <input type="hidden" asp-for="NewQuotation.IsService" id="isService" value="true" />
                <input type="hidden" asp-for="NewQuotation.TotalAmount" id="totalAmount" value="0" />

                <div class="form-group mt-3">
                    <button type="submit" class="btn btn-primary">Create Quotation</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Client selection change handler
        document.querySelectorAll('input[name="quotationType"]').forEach(radio => {
            radio.addEventListener('change', function() {
                const isService = this.id === 'serviceType';
                document.getElementById('isService').value = isService;
                document.getElementById('serviceSection').style.display = isService ? 'block' : 'none';
                document.getElementById('productSection').style.display = isService ? 'none' : 'block';
            });
        });

        // Service items management
        let serviceItemCount = 0;
        document.getElementById('addServiceItem').addEventListener('click', function() {
            serviceItemCount++;
            const newRow = document.createElement('tr');
            newRow.innerHTML = `
                <td>${serviceItemCount}</td>
                <td><input type="text" name="ServiceItems[${serviceItemCount-1}].ServiceName" class="form-control form-control-sm" required /></td>
                <td><input type="text" name="ServiceItems[${serviceItemCount-1}].Description" class="form-control form-control-sm" required /></td>
                <td><input type="number" step="0.01" name="ServiceItems[${serviceItemCount-1}].Price" class="form-control form-control-sm price-input" required /></td>
                <td><button type="button" class="btn btn-sm btn-danger remove-item">Remove</button></td>
            `;
            document.getElementById('serviceItemsBody').appendChild(newRow);
            addPriceEventListeners();
        });

        // Product items management
        let productItemCount = 0;
        document.getElementById('addProductItem').addEventListener('click', function() {
            productItemCount++;
            const newRow = document.createElement('tr');
            newRow.innerHTML = `
                <td>${productItemCount}</td>
                <td><input type="text" name="ProductItems[${productItemCount-1}].ProductName" class="form-control form-control-sm" required /></td>
                <td><input type="text" name="ProductItems[${productItemCount-1}].Description" class="form-control form-control-sm" required /></td>
                <td><input type="number" name="ProductItems[${productItemCount-1}].Quantity" class="form-control form-control-sm quantity-input" value="1" min="1" required /></td>
                <td><input type="number" step="0.01" name="ProductItems[${productItemCount-1}].Price" class="form-control form-control-sm price-input" required /></td>
                <td><button type="button" class="btn btn-sm btn-danger remove-item">Remove</button></td>
            `;
            document.getElementById('productItemsBody').appendChild(newRow);
            addPriceEventListeners();
        });

        // Remove item handler
        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('remove-item')) {
                e.target.closest('tr').remove();
                calculateTotal();
            }
        });

        // Calculate totals when prices change
        function addPriceEventListeners() {
            document.querySelectorAll('.price-input, .quantity-input').forEach(input => {
                input.addEventListener('input', calculateTotal);
            });
        }

        // Calculate total amount
        function calculateTotal() {
            let serviceTotal = 0;
            document.querySelectorAll('#serviceItemsBody .price-input').forEach(input => {
                serviceTotal += parseFloat(input.value) || 0;
            });

            let productTotal = 0;
            document.querySelectorAll('#productItemsBody tr').forEach(row => {
                const quantity = parseFloat(row.querySelector('.quantity-input').value) || 0;
                const price = parseFloat(row.querySelector('.price-input').value) || 0;
                productTotal += quantity * price;
            });

            document.getElementById('serviceTotal').textContent = '$' + serviceTotal.toFixed(2);
            document.getElementById('productTotal').textContent = '$' + productTotal.toFixed(2);

            const isService = document.getElementById('isService').value === 'true';
            const totalAmount = isService ? serviceTotal : productTotal;
            document.getElementById('totalAmount').value = totalAmount.toFixed(2);
        }

        // Initialize
        addPriceEventListeners();
    </script>
}
